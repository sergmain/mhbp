#
#    Copyright 2023, Sergio Lissner, Innovation platforms, LLC
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
#

server.address=127.0.0.1
#server.port=8888

#server.http2.enabled=true
#server.connection-timeout=-1
#server.forward-headers-strategy=native

#spring.profiles.active=dispatcher
#spring.profiles.active=processor
#spring.profiles.active=mysql

spring.servlet.multipart.max-file-size=400MB
spring.servlet.multipart.max-request-size=400MB

spring.servlet.multipart.resolve-lazily = false

spring.thymeleaf.enabled=false
spring.thymeleaf.check-template-location=false


logging.file.name=${MHBP_HOME}/logs/mh.log
logging.level.root = info
logging.level.ai.metaheuristic.mhbp.*=info
logging.level.ai.metaheuristic.ai.dispatcher.DispatcherCommandProcessor=info

logging.level.org.thymeleaf.*=warn

#logging.level.org.apache.http.client.*=debug
#logging.level.org.springframework.data=warn
logging.level.org.springframework.security=warn
logging.level.org.springframework.web.*=warn


#logging.level.org.springframework.web.servlet.mvc.support
#logging.level.org.springframework=info
#logging.level.org.springframework.*=info
#logging.level.org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer=info
#logging.level.org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter=info
#logging.level.org.apache.coyote.http11.Http11Processor=info
#logging.level.org.hibernate.SQL=info


# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url= jdbc:h2:file:${MHBP_HOME}/mhbp-data/db/mhbpdb;MODE=MYSQL;DB_CLOSE_ON_EXIT=FALSE;
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.sql.init.platform=h2
spring.sql.init.mode=always
spring.sql.init.continue-on-error=true


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false


# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false
spring.jpa.open-in-view = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Caching
#spring.jpa.hibernate.cache.use_second_level_cache=true
#spring.jpa.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory

# ============== ai.metaheuristic ==================
# ------------- common -----------------
mhbp.threads.scheduler=10
mhbp.threads.event=10

#mh.cors-allowed-origins=http://192.168.0.1
mhbp.cors-allowed-origins=http://localhost:4200, http://localhost:8888, http://localhost:8080, https://amhbp8080.metaheuristic.ai

mhbp.ssl-required=false

# password - 123
mhbp.main-password=$2a$10$jaQkP.gqwgenn.xKtjWIbeP4X.LDJx92FKaQ9VfrN2jgdOUTPTMIu
mhbp.main-username=q

mhbp.kb[0].code = openai
mhbp.kb[0].type = openai
mhbp.kb[0].git.repo= https://github.com/openai/evals.git
mhbp.kb[0].git.branch= main
mhbp.kb[0].git.commit= origin
mhbp.kb[0].git.kbPaths[0].evals = evals/registry/evals
mhbp.kb[0].git.kbPaths[0].data = evals/registry/data
mhbp.kb[0].disabled= true

mhbp.kb[1].code = coqa
mhbp.kb[1].type = coqa
mhbp.kb[1].disabled= true
mhbp.kb[1].file.url = https://nlp.stanford.edu/data/coqa/coqa-train-v1.0.json


mhbp.kb[2].code = squad
mhbp.kb[2].type = coqa
mhbp.kb[2].disabled= true
mhbp.kb[2].file.url = https://rajpurkar.github.io/SQuAD-explorer/dataset/train-v2.0.json
